# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protobuf import im_protobuf_pb2 as im__protobuf__pb2


class WebsocketServerStub(object):
    """The AccServer service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueryUsersOnline = channel.unary_unary(
                '/protobuf.WebsocketServer/QueryUsersOnline',
                request_serializer=im__protobuf__pb2.QueryUsersOnlineReq.SerializeToString,
                response_deserializer=im__protobuf__pb2.QueryUsersOnlineRsp.FromString,
                )
        self.SendMsg = channel.unary_unary(
                '/protobuf.WebsocketServer/SendMsg',
                request_serializer=im__protobuf__pb2.SendMsgReq.SerializeToString,
                response_deserializer=im__protobuf__pb2.SendMsgRsp.FromString,
                )
        self.SendMsgAll = channel.unary_unary(
                '/protobuf.WebsocketServer/SendMsgAll',
                request_serializer=im__protobuf__pb2.SendMsgAllReq.SerializeToString,
                response_deserializer=im__protobuf__pb2.SendMsgAllRsp.FromString,
                )
        self.GetUserList = channel.unary_unary(
                '/protobuf.WebsocketServer/GetUserList',
                request_serializer=im__protobuf__pb2.GetUserListReq.SerializeToString,
                response_deserializer=im__protobuf__pb2.GetUserListRsp.FromString,
                )


class WebsocketServerServicer(object):
    """The AccServer service definition.
    """

    def QueryUsersOnline(self, request, context):
        """查询用户是否在线
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMsg(self, request, context):
        """发送消息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMsgAll(self, request, context):
        """给这台机器的房间内所有用户发送消息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserList(self, request, context):
        """获取用户列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WebsocketServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueryUsersOnline': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryUsersOnline,
                    request_deserializer=im__protobuf__pb2.QueryUsersOnlineReq.FromString,
                    response_serializer=im__protobuf__pb2.QueryUsersOnlineRsp.SerializeToString,
            ),
            'SendMsg': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMsg,
                    request_deserializer=im__protobuf__pb2.SendMsgReq.FromString,
                    response_serializer=im__protobuf__pb2.SendMsgRsp.SerializeToString,
            ),
            'SendMsgAll': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMsgAll,
                    request_deserializer=im__protobuf__pb2.SendMsgAllReq.FromString,
                    response_serializer=im__protobuf__pb2.SendMsgAllRsp.SerializeToString,
            ),
            'GetUserList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserList,
                    request_deserializer=im__protobuf__pb2.GetUserListReq.FromString,
                    response_serializer=im__protobuf__pb2.GetUserListRsp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protobuf.WebsocketServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WebsocketServer(object):
    """The AccServer service definition.
    """

    @staticmethod
    def QueryUsersOnline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.WebsocketServer/QueryUsersOnline',
            im__protobuf__pb2.QueryUsersOnlineReq.SerializeToString,
            im__protobuf__pb2.QueryUsersOnlineRsp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.WebsocketServer/SendMsg',
            im__protobuf__pb2.SendMsgReq.SerializeToString,
            im__protobuf__pb2.SendMsgRsp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMsgAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.WebsocketServer/SendMsgAll',
            im__protobuf__pb2.SendMsgAllReq.SerializeToString,
            im__protobuf__pb2.SendMsgAllRsp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protobuf.WebsocketServer/GetUserList',
            im__protobuf__pb2.GetUserListReq.SerializeToString,
            im__protobuf__pb2.GetUserListRsp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
